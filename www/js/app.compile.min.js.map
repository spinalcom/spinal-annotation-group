{"version":3,"sources":["../../app/app.js","../../app/app.config.js","../../app/app.route.js","../../app/directives/navbar.js","../../app/services/spinalCore.js","../../app/services/spinalModelDictionary.js","../../app/services/goldenLayoutService.js","../../app/services/authService.js","../../app/controllers/mainCtrl.js","../../app/controllers/navbarCtrl.js","../../app/controllers/forgeViewerCtrl.js","../../app/controllers/loginCtrl.js","../../app/run/plugin-annotation.js"],"names":[],"mappings":"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","file":"app.compile.min.js","sourcesContent":["angular.module('app.route', ['ngRoute']);\nangular.module('app.services', []);\nangular.module('app.directives', []);\nangular.module('app.controllers', []);\nangular.module('app.spinalcom', ['settings', 'ngMaterial']);\nangular.module('app.spinalforge.plugin', []);\n\nangular.module('SpinalApp', ['ngAnimate', 'ngMaterial', 'app.directives', 'app.route',\n    'app.services', 'app.controllers', 'ngMdIcons', 'settings', 'app.spinalcom', 'app.spinalforge.plugin', \"colorpicker.module\"\n  ])\n  .run(['$rootScope', '$location', 'authService', function ($rootScope, $location, authService) {\n    let user = authService.get_user();\n    $rootScope.$on('$routeChangeStart', function (event, next, current) {\n      if (next.$$route.authenticate) {\n        if (!authService.is_Connected()) {\n          authService.login(user.username, user.password)\n            .then(function () {},\n              function () {\n                $location.path('/login');\n              });\n        }\n      }\n    });\n  }])\n\n\n  .config([\"$mdThemingProvider\", function ($mdThemingProvider) {\n    $mdThemingProvider.theme('altTheme')\n      .primaryPalette('grey', {\n        'default': '200'\n      })\n      .accentPalette('grey', {\n        'default': '700'\n      })\n      .dark();\n    $mdThemingProvider.theme('default')\n      .dark();\n\n    $mdThemingProvider.setDefaultTheme('altTheme');\n    $mdThemingProvider.alwaysWatchTheme(true);\n  }]).run([\"$templateCache\", \"$http\", function ($templateCache, $http) {\n    let load_template = (uri, name) => {\n      $http.get(uri).then((response) => {\n        $templateCache.put(name, response.data);\n      }, (errorResponse) => {\n        console.log('Cannot load the file ' + uri);\n      });\n    };\n    let toload = [{\n      uri: 'app/templates/forgeviewer.html',\n      name: 'forgeviewer.html'\n    }];\n    for (var i = 0; i < toload.length; i++) {\n      load_template(toload[i].uri, toload[i].name);\n    }\n\n    // $templateCache.put('templateId.html', 'This is the content of the template');\n  }]);","angular.module('settings', [])\n  .constant('config', {\n    main_path: '/',\n    spinalhub_url: '127.0.0.1',\n    spinalhub_port: '8888',\n    spinalhub_user: '168',\n  });","angular.module('app.route')\n  .config([\"$routeProvider\", \"$locationProvider\",\n    function ($routeProvider, $locationProvider) {\n      $routeProvider\n\n        .when(\"/viewer/:filepath\", {\n          templateUrl: \"app/templates/main.html\",\n          authenticate: true,\n          controller: 'mainCtrl'\n        })\n        .when(\"/login\", {\n          templateUrl: \"app/templates/login.html\",\n          authenticate: false,\n          controller: 'loginCtrl'\n        })\n        .when('/404', {\n          authenticate: false,\n          controller: ['$location', function ($location) {\n            $location.replace('/drive/');\n          }]\n        }).otherwise({\n          redirectTo: '/404'\n        });\n\n      // .otherwise({\n      //   redirectTo: '/viewer'\n      // });\n    }\n  ]);","angular.module('app.directives')\n  .directive(\"navbar\", [\n    function () {\n      return {\n        restrict: 'E',\n        templateUrl: 'app/templates/navbar.html',\n        controller: 'navbarCtrl',\n      };\n    }\n  ])\n  .directive(\"menuGlayout\", ['goldenLayoutService', '$timeout',\n    function (goldenLayoutService, $timeout) {\n      return {\n        restrict: 'E',\n        scope: {\n          layoutInfo: '=info'\n        },\n        replace: true,\n        template: '<li ng-repeat=\\\"layout in layoutInfo\\\"  id=\\\"{{layout.id}}\\\"><a >{{layout.name}}</a></li>',\n        link: (scope, element, attrs) => {\n          goldenLayoutService.wait_ready().then(() => {\n            let create_callback = (goldenLayoutService, layout) => {\n              return () => {\n                goldenLayoutService.createChild(layout.cfg);\n              };\n            };\n            for (var i = 0; i < scope.layoutInfo.length; i++) {\n              let layout = scope.layoutInfo[i];\n              goldenLayoutService.createDragSource($(\"#\" + layout.id)[0], layout.cfg);\n              $(\"#\" + layout.id).click(create_callback(goldenLayoutService, layout));\n            }\n          });\n        }\n      };\n    }\n  ])\n  .directive('ngRightClick', [\"$parse\", function ($parse) {\n    return function (scope, element, attrs) {\n      var fn = $parse(attrs.ngRightClick);\n      element.bind('contextmenu', function (event) {\n        scope.$apply(function () {\n          event.preventDefault();\n          fn(scope, {\n            $event: event\n          });\n        });\n      });\n    };\n  }]);","angular.module('app.spinalcom')\n  .factory('ngSpinalCore', ['$q', function ($q) {\n    var service = {};\n    service.conn = 0;\n\n    service.connect = function (option) {\n      service.conn = spinalCore.connect(option);\n    };\n    service.store = function (model, path) {\n      var deferred = $q.defer();\n      spinalCore.store(service.conn, model, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load = function (path) {\n      var deferred = $q.defer();\n      spinalCore.load(service.conn, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load_type = function (model, path) {\n      var deferred = $q.defer();\n      spinalCore.load_type(service.conn, model, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load_right = function (ptr) {\n      var deferred = $q.defer();\n      spinalCore.load_right(service.conn, ptr, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.share_model = function (data, filename, flag, target_username) {\n      return spinalCore.share_model(service.conn, data, filename, flag, target_username);\n    };\n    return service;\n  }]);","angular.module('app.spinalcom')\n  .factory('spinalModelDictionary', [\"$q\", \"ngSpinalCore\", \"config\", \"authService\", \"$routeParams\", \"$location\",\n    function ($q, ngSpinalCore, config, authService, $routeParams, $location) {\n      let factory = {};\n      factory.model = 0;\n      factory.init = () => {\n        var deferred = $q.defer();\n        if (factory.model == 0) {\n          authService.wait_connect().then(() => {\n            let user = authService.get_user();\n            let path = $routeParams.filepath;\n            console.log(path)\n            if (path) {\n              path = atob(path);\n              ngSpinalCore.load(path).then((m) => {\n                factory.model = m;\n                console.log(m);\n                deferred.resolve(m);\n\n              }, () => {\n                let msg = \"not able to load : \" + path;\n                console.error(msg);\n                $location.replace('/drive/');\n                deferred.reject(msg);\n              });\n            }\n          }, () => {\n            let msg = \"not able to load : \" + path;\n            console.error(msg);\n            $location.replace('/drive/');\n            deferred.reject(msg);\n          });\n        } else\n          deferred.resolve(factory.model);\n        return deferred.promise;\n      };\n      return factory;\n    }\n  ]);","angular.module('app.services')\n  .factory('goldenLayoutService', ['$q', '$window', '$templateCache', '$rootScope', '$compile',\n    function ($q, $window, $templateCache, $rootScope, $compile) {\n      var config = {\n        content: [{\n          type: 'row',\n          content: [{\n            isClosable: false,\n            title: \"Viewer\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'forgeviewer.html',\n              controller: 'forgeViewerCtrl'\n            }\n          }]\n        }]\n      };\n      let myLayout = 0;\n      let factory = {};\n      factory.init = () => {\n        if (myLayout == 0) {\n          myLayout = new GoldenLayout(config, $(\"#g-layout\"));\n          myLayout.registerComponent('SpinalHome', function (container, state) {\n            var element = container.getElement();\n            if (state.template == '') {\n\n              element.html();\n              $compile(element.contents())($rootScope);\n            } else {\n              element.html(\"<div class=\\\"gpannel-content\\\" ng-controller=\\\"\" + state.controller + \"\\\" ng-cloak>\" +\n                $templateCache.get(state.template) + \"</div>\");\n              $compile(element.contents())($rootScope);\n            }\n          });\n\n          myLayout.init();\n          angular.element($window).bind('resize', function () {\n            myLayout.updateSize();\n          });\n          $rootScope.$emit(\"GoldenLayout_READY\");\n        }\n      };\n\n      factory.wait_ready = () => {\n        return $q(function (resolve, reject) {\n          $rootScope.$on(\"GoldenLayout_READY\", () => {\n            resolve();\n          });\n        });\n      };\n\n\n\n      factory.createChild = (config) => {\n        myLayout.root.contentItems[0].addChild(config);\n      };\n\n      factory.createDragSource = (element, config) => {\n        myLayout.createDragSource(element, config);\n\n      };\n\n\n      return factory;\n    }\n  ])\n  .factory('layout_uid', function () {\n    let uid = 0;\n    return ({\n      get: () => {\n        let id = uid++;\n        return id;\n      }\n    });\n  });","angular.module('app.spinalcom')\n  .factory('authService', [\"$q\", \"ngSpinalCore\", \"config\", \"$http\",\n    function ($q, ngSpinalCore, config, $http) {\n      let factory = {};\n      let user = {\n        username: \"\",\n        password: \"\",\n        id : \"\"\n      };\n      let is_Connected = false;\n      factory.save_user = (username, password, id) => {\n        user.username = username;\n        user.password = password;\n        user.id = id;\n        window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n      };\n      factory.get_user = () => {\n        let _user = window.localStorage.getItem(\"spinalhome_cfg\");\n        if (_user) {\n          user = JSON.parse(atob(_user));\n        }\n        return user;\n      };\n\n      factory.logout = (username, password) => {\n        if (user.username != \"\") {\n          factory.save_user(\"\", \"\",\"\");\n          location.reload();\n        }\n      };\n\n      factory.login = (username, password) => {\n        let deferred = $q.defer();\n        let url = \"/get_user_id\";\n        $http.get(url + \"?u=\" + username + \"&p=\" + password)\n          .then(function (data) {\n            var u = parseInt(data.data);\n            var i = 0;\n            if (u == -1) {\n              let msg = (\"Login Error: username / password pair not found.\");\n              // $mdToast.show(loginError_toast)\n              deferred.reject(msg);\n              for (i = 0; i < wait_connectList.length; i++) {\n                wait_connectList[i].reject();\n              }\n              wait_connectList = [];\n              return;\n            }\n            ngSpinalCore.connect(\"http://\" + u + \":\" + password +\n              \"@\" + config.spinalhub_url + \":\" + config.spinalhub_port + \"/\");\n            factory.save_user(username, password,u);\n            is_Connected = true;\n            deferred.resolve();\n            for (i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].resolve();\n            }\n            wait_connectList = [];\n          }, function (data) {\n            let msg = ('Connection Error: Imposible to connect to the server.');\n            // $mdToast.show(connectionError_toast)\n            deferred.reject(msg);\n            for (var i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].reject();\n            }\n            wait_connectList = [];\n          });\n        return deferred.promise;\n      };\n\n      factory.is_Connected = () => {\n        return is_Connected;\n      };\n      let wait_connectList = [];\n      factory.wait_connect = () => {\n        let deferred = $q.defer();\n        if (is_Connected == true) {\n          deferred.resolve();\n        } else\n          wait_connectList.push(deferred);\n        return deferred.promise;\n      };\n\n      return factory;\n    }\n  ]);","angular.module('app.controllers')\n  .controller('mainCtrl', [\"$scope\", \"$routeParams\", \"goldenLayoutService\", \"spinalModelDictionary\",\n    function ($scope, $routeParams, goldenLayoutService, spinalModelDictionary) {\n      goldenLayoutService.init();\n    }\n  ]);","angular.module('app.controllers')\n  .controller('navbarCtrl', [\"$scope\", \"authService\", \"$location\", \"$routeParams\",\n    function ($scope, authService, $location, $routeParams) {\n      $scope.username = \"\";\n      $scope.connected = false;\n      authService.wait_connect().then(() => {\n        $scope.username = authService.get_user().username;\n        $scope.connected = true;\n        $scope.viewer = $routeParams.filepath;\n        if ($scope.viewer) {\n          $scope.viewer = atob($scope.viewer);\n        } else {\n          $scope.viewer = \"viewer\";\n        }\n        console.log($routeParams.filepath);\n\n      });\n      $scope.logout = () => {\n        $location.path('/login');\n      };\n      // get in SpinalDrive_Env\n      $scope.layouts = [\n\n        {\n          id: \"drag-viewer\",\n          name: \"viewer\",\n          cfg: {\n            isClosable: true,\n            title: \"viewer\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'forgeviewer.html',\n              controller: 'forgeViewerCtrl'\n            }\n          }\n        },\n\n\n      ];\n\n\n\n\n\n    }\n  ]);","angular.module('app.spinalforge.plugin')\n  .controller('forgeViewerCtrl', [\"$scope\", \"$rootScope\", \"$mdDialog\", \"authService\", \"$compile\", \"$injector\", \"layout_uid\", \"spinalModelDictionary\",\n    function ($scope, $rootScope, $mdDialog, authService, $compile, $injector, layout_uid, spinalModelDictionary) {\n      $scope.injector = $injector;\n      $scope.uid = layout_uid.get();\n      console.log(\"forgeviewerCtrl start\")\n\n      $rootScope.allNotes = []\n      // load etc..\n      $rootScope.allNotes = [\n        {\n          title: new Str(\"test1\"),\n        },\n        {\n          title: new Str(\"test1\"),\n        },\n        {\n          title: new Str(\"test1\"),\n        },\n        {\n          title: new Str(\"test1\"),\n        },\n            ]\n\n\n      spinalModelDictionary.init().then(function (ForgeFile) {\n        var viewerApp, viewables, indexViewable;\n        console.log(\"forgeviewerCtrl start 2\")\n\n        var config3d = {\n          extensions: ['PannelAnnotation', \"Autodesk.ADN.Viewing.Extension.Color\"]\n        };\n        var options = {\n          env: 'AutodeskProduction',\n          accessToken: ''\n        };\n\n\n        var documentId = 'urn:' + ForgeFile.urn.get();\n        get_oAuthToken(ForgeFile, documentId, init_autodesk);\n\n        function get_oAuthToken(forgeFile, documentId, callback) {\n          forgeFile.oauth.set(\"\");\n          forgeFile.ask_token.set(true);\n          var ask_for_token = true;\n          var oauth_onchange = function () {\n            if (ask_for_token && forgeFile.oauth.get() != \"\") {\n              ask_for_token = false;\n              forgeFile.oauth.unbind(oauth_onchange);\n              options.accessToken = forgeFile.oauth.get();\n              callback(documentId);\n            }\n          };\n          forgeFile.oauth.bind(oauth_onchange);\n        }\n\n        function init_autodesk(documentId) {\n          Autodesk.Viewing.Initializer(options, function onInitialized() {\n            viewerApp = new Autodesk.Viewing.ViewingApplication('MyViewerDiv' + $scope.uid);\n            viewerApp.registerViewer(viewerApp.k3D, Autodesk.Viewing.Private.GuiViewer3D, config3d);\n            viewerApp.loadDocument(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\n          });\n        }\n\n\n        function onDocumentLoadSuccess(doc) {\n          viewables = viewerApp.bubble.search({\n            'type': 'geometry',\n            'role': '3d'\n          });\n          if (viewables.length === 0) {\n            console.error('Document contains no viewables.');\n            return;\n          }\n          viewerApp.selectItem(viewables[viewables.length - 1].data, onItemLoadSuccess, onItemLoadFail);\n        }\n\n\n        function onDocumentLoadFailure(viewerErrorCode) {\n          console.error('onDocumentLoadFailure() - errorCode:' + viewerErrorCode);\n        }\n\n\n        function onItemLoadSuccess(viewer, item) {\n          viewer.scope = $scope;\n          console.log('Viewers are equal: ' + (viewer === viewerApp.getCurrentViewer()));\n        }\n\n\n        function onItemLoadFail(errorCode) {\n          console.error('onItemLoadFail() - errorCode:' + errorCode);\n        }\n\n      });\n\n\n    }\n  ]);","angular.module('app.controllers')\n  .controller('loginCtrl', [\"$scope\", \"authService\", \"$mdToast\", \"$location\",\n    function ($scope, authService, $mdToast, $location) {\n      let toast = $mdToast.simple()\n        .hideDelay(3000);\n      let user = authService.get_user();\n      authService.logout();\n      $scope.conf = {\n        email: \"\",\n        password: \"\"\n      };\n      $scope.ConnectBtn = () => {\n        authService.login($scope.conf.email, $scope.conf.password).then(\n          () => {\n            $location.path('/home');\n          },\n          (err) => {\n            toast.textContent(err);\n            $mdToast.show(toast);\n          }\n        );\n      };\n\n    }\n  ]);","\n\nangular.module('app.spinalforge.plugin').run([\"spinalModelDictionary\", \"$mdDialog\", \"$mdToast\", \"authService\",\"$rootScope\",\"$compile\",\n  function (spinalModelDictionary, $mdDialog,$mdToast, authService,$rootScope,$compile) {\n\n    class PannelAnnotation {\n      constructor(viewer, options) {\n        Autodesk.Viewing.Extension.call(this, viewer, options);\n\n        this.viewer = viewer;\n        this.panel = null;\n        this.user = authService.get_user();\n        this.messagePanel;\n\n        // $rootScope.focus_input = function() {\n        //   var input = document.getElementById(\"_input\");\n        //   input.focus();\n        // }\n\n        $rootScope.exec_function = (name,param1 = null,param2 = null,param3 = null) => {\n          switch (name) {\n            case \"createTheme\":\n              this.createTheme();\n              break;\n\n            case \"addNote\":\n              this.createNote(param1);\n              break;\n            \n            case \"seeAnnotation\":\n              this.SeeAnnotation(param1);\n              break;\n            \n              case \"addItem\":\n              this.AddItems(param1,param2)\n              break;\n  \n            case \"changeColor\":\n              this.changeColorInHub(param1,param2,param3);\n              break;\n  \n            case \"view\":\n              this.viewOrHide(param1,param2);\n              break;\n  \n            case \"rename\":\n              this.renameNote(param1,param2);\n              break;\n  \n            case \"delete\":\n              this.deleteNoteItem(param1,param2,param3);\n              break;\n\n            case \"info\":\n              this.viewMessagePanel(param1,param2);\n              break;\n  \n            \n            // case \"settingAnnotation\":\n            //   this.settingAnnotation(params);\n            //   break;\n            // case \"save\" :\n            //   this.saveModification(params,param2);\n            //   break;\n          }\n        }\n\n      }\n\n      load() {\n        if (this.viewer.toolbar) {\n          this.createUI();\n        } else {\n          this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);\n          this.viewer.addEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n        }\n        return true;\n      }\n\n      onToolbarCreated() {\n        this.viewer.removeEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n        this.onToolbarCreatedBinded = null;\n        this.createUI();\n      }\n\n      unload() {\n        this.viewer.toolbar.removeControl(this.subToolbar);\n        return true;\n      }\n\n      createUI() {\n        var title = 'Annotation';\n        this.panel = new PanelClass(this.viewer, title);\n\n        this.initialize();\n\n        var button1 = new Autodesk.Viewing.UI.Button('Annotation');\n\n        button1.onClick = (e) => {\n          if (!this.panel.isVisible()) {\n            this.panel.setVisible(true);\n          } else {\n            this.panel.setVisible(false);\n          }\n        };\n\n        button1.addClass('fa');\n        button1.addClass('fa-pencil');\n        button1.addClass('fa-2x');\n        button1.setToolTip('Annotation');\n\n        this.subToolbar = new Autodesk.Viewing.UI.ControlGroup('my-Annotation');\n        this.subToolbar.addControl(button1);\n        this.viewer.toolbar.addControl(this.subToolbar);\n      }\n\n      initialize() {\n\n\n        this.panel.initializeMoveHandlers(this.panel.container);\n        // this.panel.container.appendChild(this.panel.createScrollContainer());\n        var _container = angular.element(this.panel.container);\n\n        spinalModelDictionary.init().then((m) => {\n          if (m) {\n            if (m.groupAnnotationPlugin) {\n              m.groupAnnotationPlugin.load((mod) => {\n                this.model = mod;\n                this.func_success(this.model,_container);\n              });\n            } else {\n              this.model = new Lst();\n              m.add_attr({\n                groupAnnotationPlugin : new Ptr(this.model)\n              });\n              this.func_success(this.model,_container);\n            }\n\n          }\n\n        });\n      }\n\n      func_success(data,parent) {\n        //this.messagePanel = new MessagePanel(this.viewer,this.model,this.user);\n        var container = angular.element('<div class=\"_container\"></div>');\n        var addGroup = angular.element(`<md-button class=\"md-raised md-primary block\" ng-click=\"exec_function('createTheme')\">Create a group</md-button>`);\n\n        var items = document.createElement('div');\n        items.className = \"themes\";\n\n        \n\n        container.append(addGroup)\n        \n        data.bind(() => {\n          items.innerHTML = \"\";\n          this.displayTheme(items,container,data);\n        })\n\n        $compile(container)($rootScope);\n        parent.append(container);\n\n        var colors = document.getElementsByClassName(\"input_color\");\n        console.log(\"colors\",colors)\n        var _self = this;\n\n        for (let i = 0; i < colors.length; i++) {\n          colors[i].onchange = function() {\n            _self.changeColorInHub(this.theme, this.name, this.value);\n          }\n          \n        }\n\n      }\n\n\n      displayAnnotation(id) {\n\n        var notes = this.model;\n        var selected;\n\n\n        var content = `<md-list class='md-list-item-text' id=\"a_${id}\">`;\n        \n        for (let i = 0; i < notes.length; i++) {\n          const element = notes[i];\n          if(element.id == id) {\n            selected = element;\n            break;\n          }\n        }\n\n        if(selected != null) {\n          for (let j = 0; j < selected.listModel.length; j++) {\n            const note = selected.listModel[j];\n\n            content += `<md-list-item ng-click=\"\" class=\"noright\">\n                <p class=\"noteTitle\">${note.title.get()}</p>\n\n\n                <md-button class=\"i_btn\" aria-label=\"add_item\" id=${note.id.get()} ng-click=\"exec_function('addItem','${selected.id.get()}','${note.id.get()}')\">\n                  <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <input class=\"i_btn input_color\" value=\"${note.color.get()}\" id=\"i_color\" type='color' theme='${selected.id.get()}' name='${note.id.get()}'/>\n\n                <md-button class=\"i_btn show${note.id.get()}\" id=${note.id.get()} aria-label=\"view\" ng-click=\"exec_function('view','${selected.id.get()}','${note.id.get()}')\" show=\"false\">\n                  <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${note.id.get()} aria-label=\"rename\" ng-click=\"exec_function('rename','${selected.id.get()}','${note.id.get()}')\">\n                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${note.id.get()} aria-label=\"delete\" ng-click=\"exec_function('delete','${selected.id.get()}','${note.id.get()}')\">\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${note.id.get()} aria-label=\"info\" ng-click=\"exec_function('info','${selected.id.get()}','${note.id.get()}')\">\n                  <i class=\"fa fa-comment\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${note.id.get()} aria-label=\"info\" ng-click=\"exec_function('file','${selected.id.get()}','${note.id.get()}')\">\n                  <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\n                </md-button> \n\n            </md-list-item>`;\n            \n          }\n        }\n        \n        content += `</md-list>`;\n\n        return content;\n\n      }\n\n      displayTheme(parent,container,notes) {\n        \n        var content = angular.element(`<md-list></md-list>`);\n        var div,element;\n\n        if(notes.length > 0) {\n          for (let i = 0; i < notes.length; i++) {\n            element = notes[i];\n            div = angular.element(`\n              <md-list-item>   \n                <p id='p_${element.id.get()}' show=\"false\" ng-click=\"exec_function('seeAnnotation','${element.id.get()}')\">\n                  <i class=\"fa fa-caret-right\"></i>\n                  &nbsp;\n                  ${element.name.get()}\n                </p>\n\n                <md-button class=\"i_btn\" aria-label=\"add_item\" id=${element.id.get()} ng-click=\"exec_function('addNote','${element.id.get()}')\">\n                  <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn show${element.id.get()}\" id=${element.id.get()} aria-label=\"view\" show=\"false\">\n                  <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${element.id.get()} aria-label=\"rename\">\n                  <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </md-button>\n\n                <md-button class=\"i_btn\" id=${element.id.get()} aria-label=\"delete\">\n                  <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </md-button>\n\n              </md-list-item>\n\n              ${this.displayAnnotation(element.id.get())}\n            `);\n              \n            content.append(div);\n\n          }\n        } else {\n          content.append('<h1>No note created ! create one</h1>');\n        }\n        var _parent = angular.element(parent);\n        var c = angular.element(content);\n        _parent.append(c);\n        $compile(c)($rootScope);\n\n        container.append(_parent);\n\n        var annotationSelected = angular.element('<div class=\"item_selected\"></div>')\n        container.append(annotationSelected);\n\n      }\n\n      createTheme() {\n        var notes = this.model;\n        var theme = new ThemeModel();\n\n        theme.id.set(newGUID());\n        theme.creation.set(Date.now());\n        theme.owner.set(this.user.id);\n        theme.username.set(this.user.username);\n\n        var confirm = $mdDialog.prompt()\n          .title('Theme')\n          .placeholder('Please enter the theme')\n          .ariaLabel('New Theme')\n          .clickOutsideToClose(true)\n          .required(true)\n          .ok('create!')\n          .cancel('Cancel')\n        \n          $mdDialog.show(confirm).then((result) => {\n            theme.name.set(result);\n\n            notes.push(theme);\n\n            console.log(this.model)\n\n          },function(){})\n\n      }\n\n      createNote(id){\n        var notes = this.model;\n        var selected;\n\n        for (let i = 0; i < notes.length; i++) {\n          const element = notes[i];\n          if(element.id == id) {\n            selected = element;\n            break;\n          }\n          \n        }\n\n        var noteModel = new NoteModel();\n\n        noteModel.id.set(newGUID());\n        noteModel.owner.set(this.user.id);\n        noteModel.username.set(this.user.username);\n        noteModel.date.set(Date.now());\n        noteModel.color.set(\"#000000\");\n\n        var confirm = $mdDialog.prompt()\n          .title('Note')\n          .placeholder('Note name')\n          .ariaLabel('New Note')\n          .clickOutsideToClose(true)\n          .required(true)\n          .ok('create')\n          .cancel('Cancel')\n        \n        $mdDialog.show(confirm).then((result) => {\n          noteModel.title.set(result);\n\n          selected.listModel.push(noteModel);\n\n        },function(){})\n        \n\n      }\n\n      SeeAnnotation(id) {\n        var p_div = document.getElementById(\"p_\" + id);\n        var annot_div = document.getElementById(\"a_\" + id);\n        var icon = p_div.getElementsByTagName('i')[0];\n\n\n        if(p_div.getAttribute(\"show\") == \"false\") {\n          annot_div.style.display = \"block\";\n          p_div.setAttribute('show','true');\n          icon.setAttribute('class','fa fa-caret-down')\n        } else {\n          annot_div.style.display = \"none\";\n          p_div.setAttribute('show','false');\n          icon.setAttribute('class','fa fa-caret-right')\n        }\n        \n      }\n\n\n      // settingAnnotation(id) {\n      //   var notes = this.model;\n      //   var liste = id.split(\"/\");\n      //   var themeId = liste[0];\n      //   var annotationId = liste[1];\n      //   // var sel;\n      //   // var themeName;\n\n      //   $rootScope.themeName;\n      //   $rootScope.annotationSelected;\n      //   var name;\n\n\n      //   for (let i = 0; i < notes.length; i++) {\n      //     const element = notes[i];\n      //     if(element.id == themeId) {\n      //       $rootScope.themeName = element.name.get();\n      //       for (let j = 0; j < element.listModel.length; j++) {\n      //         const annotation = element.listModel[j];\n      //         if(annotation.id == annotationId) {\n      //           // sel = annotation;\n      //           $rootScope.annotationSelected = annotation;\n      //           break;\n      //         }\n              \n      //       }\n      //       break;\n      //     }\n          \n      //   }\n\n      //   name = $rootScope.annotationSelected.title;\n\n      //   var divSelect = document.getElementsByClassName(\"item_selected\")[0];\n      //   divSelect.innerHTML = \"\";\n\n      //   var container = angular.element(divSelect);\n\n      //   var div = angular.element(`\n      //     <h1>{{themeName | uppercase}} > ${name}</h1>\n      //     <br />\n      //     <div layout=\"column\" class=\"md-inline-form\">\n      //       <md-input-container class=\"md-block\">\n      //         <label>Name</label>\n      //         <input id=\"_input\" ng-model=\"annotationSelected.title\" placeholder=\"title\" ng-click=\"focus_input()\">\n      //       </md-input-container>\n\n      //       <md-input-container class=\"md-block\">\n      //         <label>Color</label>\n      //         <input ng-model=\"annotationSelected.color\" type=\"color\" placeholder=\"title\">\n      //       </md-input-container>\n\n      //       <md-button class=\"md-raised md-primary block\" ng-click=\"exec_function('save',annotationSelected, '${themeId}')\">Save</md-button>\n\n      //     </div>\n\n\n      //   `);\n\n      //   container.append(div);\n\n      //   $compile(container)($rootScope);\n        \n\n      // }\n\n      // saveModification(annotation,themeId) {\n      //   var notes = this.model;\n\n      //   for (let i = 0; i < notes.length; i++) {\n      //     const element = notes[i];\n      //     if(element.id == themeId) {\n      //       for (let j = 0; j < element.listModel.length; j++) {\n      //         const annotation = element.listModel[j];\n      //         if(annotation.id == annotation.id) {\n      //           notes[i].listModel[j].mod_attr(annotation);\n      //           break;\n      //         }\n              \n      //       }\n      //       break;\n      //     }\n          \n      //   }\n\n      // }\n\n\n\n\n      //---------------------------------------------------- Annotation functions ------------------------------\n\n      AddItems(themeId,annotationId) {\n        var noteSelected, indexTheme,indexNote;\n        var items = this.viewer.getSelection();\n        var notes = this.model;\n  \n  \n        if (items.length == 0) {\n          alert('No model selected !');\n          return;\n        }\n  \n        this.viewer.model.getBulkProperties(items, {\n          propFilter: ['name']\n        }, (models) => {\n  \n          for (var i = 0; i < notes.length; i++) {\n            if (notes[i].id == themeId) {\n              indexTheme = i;\n              for (let j = 0; j < notes[i].listModel.length; j++) {\n                const element = notes[i].listModel[j];\n                if(element.id == annotationId) {\n                  indexNote = j;\n                  noteSelected = notes[i].listModel[j].allObject;\n                  break;\n                }\n                \n              }\n              break;\n              \n            }\n          }\n  \n          for (var j = 0; j < models.length; j++) {\n            noteSelected.push(models[j]);\n          }\n\n          notes[indexTheme].listModel[indexNote].allObject = noteSelected;\n  \n          var toast = $mdToast.simple()\n          .content(\"Item added !\")\n          .action('OK')\n          .highlightAction(true)\n          .hideDelay(0)\n          .position('bottom right')\n          .parent(\"body\");\n  \n          $mdToast.show(toast);\n        }, function () {\n          console.log(\"error\");\n        });\n  \n  \n      }\n\n\n      changeColorInHub(themeId,annotationId,color) {\n      \n        console.log(\"themeId\", themeId);\n        console.log(\"annotationId\", annotationId);\n        console.log(\"color\", color);\n\n        var noteSelected, indexNote, indexTheme;\n        var notes = this.model;\n  \n        for (var i = 0; i < notes.length; i++) {\n          if (notes[i].id == themeId) {\n            for (let j = 0; j < notes[i].listModel.length; j++) {\n              const element = notes[i].listModel[j];\n\n              if(element.id == annotationId) {\n                notes[i].listModel[j].color.set(color);\n                break;\n              }\n              \n            }\n            break;\n          }\n        }\n      }\n\n      getItemsId(themeId,annotationId) {\n        var ids = [];\n        var selected;\n        var notes = this.model;\n\n        for (var i = 0; i < notes.length; i++) {\n          if (notes[i].id == themeId) {\n            for (let k = 0; k < notes[i].listModel.length; k++) {\n              const element = notes[i].listModel[k];\n\n              if(element.id == annotationId) {\n                selected = notes[i].listModel[k];\n                break;\n              }\n              \n            }\n            break;\n          }\n        }\n\n\n        for (var j = 0; j < selected.allObject.length; j++) {\n          ids.push(selected.allObject[j].dbId.get());\n        }\n        return {ids : ids, selected : selected};\n      }\n  \n\n      changeItemColor(themeId, annotationId) {\n        \n        var idsList = this.getItemsId(themeId,annotationId);\n\n        this.viewer.setColorMaterial(idsList.ids, idsList.selected.color, idsList.selected.id);\n      }\n\n      restoreColor(themeId,annotationId) {\n        var idsList = this.getItemsId(themeId, annotationId);\n        this.viewer.restoreColorMaterial(idsList.ids,idsList.selected.id);\n      }\n\n      deleteNoteItem(themeId,annotationId,item) {\n\n        var notes = this.model;\n  \n        var dialog = $mdDialog.confirm()\n              .ok(\"Delete !\")\n              .title('Do you want to remove it?')\n              .cancel('Cancel')\n              .clickOutsideToClose(true);\n        \n              $mdDialog.show(dialog)\n              .then((result) => {\n                var themeIndex,annotationIndex;\n\n                for (let i = 0; i < notes.length; i++) {\n                  if(notes[i].id == themeId) {\n                    themeIndex = i;\n                    for(var j = 0; j < notes[i].listModel.length; j++){\n                      if(notes[i].listModel[j].id == annotationId) {\n                        annotationIndex = j;\n                        break;\n                      }  \n                    }\n                    break;\n                  }\n                    \n                }\n\n                if(item != null) {\n                  for (let index = 0; index < notes[themeIndex].listModel[annotationIndex].allObject.length; index++) {\n                    const element = notes[themeIndex].listModel[annotationIndex].allObject[index]\n                    if(element.dbId == item) {\n                      notes[themeIndex].listModel[annotationIndex].allObject.splice(index,1);\n                      break;\n                    } \n                  }\n                } else if(item == null && annotationId != null) {\n                  notes[themeIndex].listModel.splice(annotationIndex,1);\n                } else {\n                  notes.splice(themeIndex,1);\n                }\n  \n              }, function(){});\n  \n      }\n\n      renameNote(themeId,annotationId) {\n        var notes = this.model;\n  \n        var confirm = $mdDialog.prompt()\n              .title('Rename Note')\n              .placeholder('Please enter the title')\n              .ariaLabel('Rename')\n              .clickOutsideToClose(true)\n              .required(true)\n              .ok('Rename')\n              .cancel('Cancel');\n\n              $mdDialog.show(confirm).then((result) => {\n                var themeIndex;\n\n                for (let i = 0; i < notes.length; i++) {\n                  if(notes[i].id == themeId) {\n                      themeIndex = i;\n                      break;\n                  } \n                }\n\n                if(annotationId != null) {\n                  for (let j = 0; j < notes[themeIndex].listModel.length; j++) {\n                    const element = notes[themeIndex].listModel[j];\n                    if(element.id == annotationId) {\n                      notes[themeIndex].listModel[j].title.set(result);\n                      break;\n                    }   \n                  }\n                } else {\n                  notes[themeIndex].name.set(result);\n                }\n\n              }, function () {});\n      }\n\n      viewOrHide(themeId, annotationId) {\n\n        var element = document.getElementsByClassName(\"show\" + annotationId)[0];\n        var show = element.getAttribute(\"show\");\n  \n        if(show == \"false\") {\n          element.setAttribute(\"show\",\"true\");\n          this.changeItemColor(themeId, annotationId);\n          element.innerHTML = '<i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>';\n        } else {\n          this.restoreColor(themeId, annotationId);\n          element.setAttribute(\"show\",\"false\");\n          element.innerHTML = '<i class=\"fa fa-eye\" aria-hidden=\"true\"></i>';\n          \n        }\n  \n      }\n\n      //------------------------------------------------------ Pannel Message -------------------------------------\n      viewMessagePanel(themeId,annotationId) {\n        this.messagePanel.DisplayMessage(themeId,annotationId);\n      }\n\n    } // end class\n    \n  Autodesk.Viewing.theExtensionManager.registerExtension('PannelAnnotation', PannelAnnotation);\n  } // end run\n]);"]}